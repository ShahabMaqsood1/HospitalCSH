{
 "add_total_row": 1,
 "columns": [],
 "creation": "2025-02-03 17:38:59.089134",
 "disabled": 0,
 "docstatus": 0,
 "doctype": "Report",
 "filters": [
  {
   "fieldname": "from_date",
   "fieldtype": "Date",
   "label": "From Date",
   "mandatory": 1,
   "wildcard_filter": 0
  },
  {
   "fieldname": "to_date",
   "fieldtype": "Date",
   "label": "To Date",
   "mandatory": 1,
   "wildcard_filter": 0
  },
  {
   "fieldname": "patient_id",
   "fieldtype": "Link",
   "label": "Patient Id",
   "mandatory": 0,
   "options": "Patient Record",
   "wildcard_filter": 0
  }
 ],
 "idx": 0,
 "is_standard": "Yes",
 "letter_head": "Patient Appointment Header",
 "letterhead": null,
 "modified": "2025-02-03 17:38:59.089134",
 "modified_by": "Administrator",
 "module": "Children Surgical Hospital",
 "name": "New Admissions1",
 "owner": "Administrator",
 "prepared_report": 0,
 "ref_doctype": "New Admission",
 "report_name": "New Admissions1",
 "report_script": "if filters.get('from_date') and filters.get('to_date'):\r\n    # Define columns\r\n    columns = [\r\n        {\"label\": \"Patient ID\", \"fieldname\": \"patient_id\", \"fieldtype\": \"Data\", \"width\": 120},\r\n        {\"label\": \"Patient Name\", \"fieldname\": \"patient_name\", \"fieldtype\": \"Data\", \"width\": 200},\r\n        {\"label\": \"Operation\", \"fieldname\": \"operation\", \"fieldtype\": \"Data\", \"width\": 150},\r\n        {\"label\": \"Operation Doctor ID\", \"fieldname\": \"operation_doctor_id\", \"fieldtype\": \"Data\", \"width\": 150},\r\n        {\"label\": \"Anesthesia Doctor\", \"fieldname\": \"anesthesia_doctor\", \"fieldtype\": \"Data\", \"width\": 150},\r\n        {\"label\": \"Phone\", \"fieldname\": \"phone\", \"fieldtype\": \"Data\", \"width\": 120},\r\n        {\"label\": \"Address\", \"fieldname\": \"address\", \"fieldtype\": \"Data\", \"width\": 250},\r\n        {\"label\": \"Father/Mother Name\", \"fieldname\": \"fathermother_name\", \"fieldtype\": \"Data\", \"width\": 200},\r\n        {\"label\": \"Identity Card Number\", \"fieldname\": \"identity_card_number\", \"fieldtype\": \"Data\", \"width\": 150},\r\n        {\"label\": \"DR ID\", \"fieldname\": \"dr_id\", \"fieldtype\": \"Data\", \"width\": 120},\r\n        {\"label\": \"Date\", \"fieldname\": \"date\", \"fieldtype\": \"Date\", \"width\": 120},\r\n        {\"label\": \"Time\", \"fieldname\": \"time\", \"fieldtype\": \"Time\", \"width\": 120},\r\n        {\"label\": \"Receptionist\", \"fieldname\": \"receptionist\", \"fieldtype\": \"Data\", \"width\": 150},\r\n        {\"label\": \"Payment Amount\", \"fieldname\": \"payment_amount\", \"fieldtype\": \"Currency\", \"width\": 150},\r\n    ]\r\n\r\n    # Base SQL query\r\n    base_query = \"\"\"\r\n        SELECT \r\n            na.patient_id AS patient_id,\r\n            na.patient_name AS patient_name,\r\n            na.operation AS operation,\r\n            na.operation_doctor_id AS operation_doctor_id,\r\n            na.anesthesia_doctor AS anesthesia_doctor,\r\n            na.phone AS phone,\r\n            na.address AS address,\r\n            na.fathermother_name AS fathermother_name,\r\n            na.identity_card_number AS identity_card_number,\r\n            na.dr_id AS dr_id,\r\n            na.date AS date,\r\n            na.time AS time,\r\n            ap.payment_amount AS payment_amount,\r\n            na.receptionist AS receptionist\r\n        FROM \r\n            `tabNew Admission` na\r\n        LEFT JOIN \r\n            `tabAdmission Payments` ap ON ap.parent = na.name\r\n        WHERE \r\n            na.docstatus IN (0, 1)\r\n            AND na.date BETWEEN %s AND %s\r\n    \"\"\"\r\n\r\n    # Prepare conditions and values\r\n    conditions = \"\"\r\n    values = [filters.get('from_date'), filters.get('to_date')]\r\n\r\n    # Add filter for Patient ID if provided\r\n    if filters.get('patient_id'):\r\n        conditions = conditions + \" AND na.patient_id = %s\"\r\n        values.append(filters.get('patient_id'))\r\n\r\n    # Complete query with conditions\r\n    query = base_query + conditions + \"\"\"\r\n        ORDER BY \r\n            na.date, na.time\r\n    \"\"\"\r\n\r\n    # Execute the query\r\n    raw_data = frappe.db.sql(query, values, as_dict=True)\r\n\r\n    # Prepare the data to return\r\n    data = columns, raw_data, None, None, None\r\n",
 "report_type": "Script Report",
 "roles": [
  {
   "role": "System Manager"
  },
  {
   "role": "Receptionist"
  },
  {
   "role": "Doctor"
  }
 ],
 "timeout": 0
}